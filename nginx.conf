# https://github.com/auth0/nginx-jwt
# https://github.com/SkyLothar/lua-resty-jwt
worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}

# to expose environment variables to sub processes
# https://nginx.org/en/docs/ngx_core_module.html#env
env JWT_SECRET;

http {
    server {
        listen 80;
        location / {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
            ';
        }

        location = /verify {
            content_by_lua '
                local cjson = require "cjson"
                local jwt = require "resty.jwt"

                local jwt_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9" ..
                    ".eyJmb28iOiJiYXIifQ" ..
                    ".VAoRL1IU0nOguxURF2ZcKR0SGKE1gCbqwyh8u2MLAyY"
                local jwt_obj = jwt:verify("lua-resty-jwt", jwt_token)
                ngx.say(cjson.encode(jwt_obj))
            ';
        }
        location = /sign {
            content_by_lua '
                local cjson = require "cjson"
                local jwt = require "resty.jwt"

                local jwt_token = jwt:sign(
                    "lua-resty-jwt",
                    {
                        header={typ="JWT", alg="HS256"},
                        payload={foo="bar"}
                    }
                )
                ngx.say(jwt_token)
            ';
        }

        location = /secure {
            access_log off;
            default_type text/plain;

            set $jwt_secret "lua-resty-jwt";
            access_by_lua_file /etc/nginx/lua/guard.lua;

            echo "i am protected by jwt guard";
        }
    }
}
